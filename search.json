[{"path":"https://farre-lab.github.io/syntenyPlotteR/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 syntenyPlotteR authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://farre-lab.github.io/syntenyPlotteR/articles/syntenyPlotteR.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"SyntenyPlotteR - a tool for genome synteny visualisation ","text":"Determining syntenic relationships genomes important step understanding genome evolution. , researchers align species genomes one another detect sequence markers conserved sequences identify syntenic regions. plethora tools can used identify synteny DESCHRAMBLER. However, often return tables showing orientation , start stop positions syntenic regions can often hard interpret face value. , provide tool visualises data, improving interpretation alignment data, particularly identification, characterization, visualization chromosome rearrangements. SyntenyPlotteR relies use ggplot2 create graphics, producing three potential visualizations: linear relationship syntenic regions genome using draw.linear(), evolution highway style grid showing synteny single chromosomes aligned single reference species one target species using draw.eh(), ideogram painted chromosomes show syntenic relationships two genomes using draw.ideogram(). also function can reformat data structured DESCHRAMBLER/inferCARs format structure suitable required input aforementioned functions using reformat.syntenyData(). SyntenyPlotteR solely designed plot synteny data already gathered user. tool generate syntenic relationships curate data. , user required construct syntenic blocks, therefore, allowing user choose appropriate tool needs. SyntenyPlotteR easily implemented user single line functions taking directly tab delimited files containing alignment data chromosome lengths, thus meaning even inexperienced users find process fast learn simple use. package developed Sarah Quigley (slq4@kent.ac.uk), Joana Damas (joanadamas@gmail.com), Denis Larkin (dlarkin@rvc.ac.uk) Marta Farré (m.farre-belmonte@kent.ac.uk)","code":""},{"path":[]},{"path":"https://farre-lab.github.io/syntenyPlotteR/articles/syntenyPlotteR.html","id":"using-cran","dir":"Articles","previous_headings":"To install:","what":"Using CRAN","title":"SyntenyPlotteR - a tool for genome synteny visualisation ","text":"","code":"install.packages(\"syntenyPlotteR\") library(syntenyPlotteR)"},{"path":[]},{"path":"https://farre-lab.github.io/syntenyPlotteR/articles/syntenyPlotteR.html","id":"alignment-output-file-format-for-reformat-syntenydata-function","dir":"Articles","previous_headings":"Input files","what":"Alignment output file format for reformat.syntenyData() function","title":"SyntenyPlotteR - a tool for genome synteny visualisation ","text":"chromosome alignment performed using DESCHRAMBLER please input .map file chromosome alignment performed using inferCARs please input inferCARs output file","code":""},{"path":"https://farre-lab.github.io/syntenyPlotteR/articles/syntenyPlotteR.html","id":"example-file-format","dir":"Articles","previous_headings":"Input files","what":"Example file format","title":"SyntenyPlotteR - a tool for genome synteny visualisation ","text":"Figure 1 - Example output format DESCHRAMBLER/inferCARs","code":""},{"path":"https://farre-lab.github.io/syntenyPlotteR/articles/syntenyPlotteR.html","id":"alignment-file-input-format-for-draw-eh-draw-ideogram-and-draw-linear-functions","dir":"Articles","previous_headings":"Input files","what":"Alignment file input format for draw.eh(), draw.ideogram(), and draw.linear() functions","title":"SyntenyPlotteR - a tool for genome synteny visualisation ","text":"Please provide file alignment synteny blocks following format, separated tabs include header line Reference chromosome ID Reference start position Reference end position Target chromosome Target start position Target end position Orientation Reference species ID Target species ID","code":""},{"path":"https://farre-lab.github.io/syntenyPlotteR/articles/syntenyPlotteR.html","id":"example-file-format-1","dir":"Articles","previous_headings":"Input files","what":"Example file format","title":"SyntenyPlotteR - a tool for genome synteny visualisation ","text":"Figure 2 - Example input format alignment data files showing alignments different chromosomes reference sps2 target sps1. Figure 3 - Example input format draw.eh() function. figure shows alignments reference species (sps4 - column 8) chromosome 17 (column 1) multiple target species (column 9)","code":""},{"path":"https://farre-lab.github.io/syntenyPlotteR/articles/syntenyPlotteR.html","id":"chromosome-length-file-for-draw-ideogram-and-draw-linear-functions","dir":"Articles","previous_headings":"Input files","what":"Chromosome Length file for draw.ideogram() and draw.linear() functions","title":"SyntenyPlotteR - a tool for genome synteny visualisation ","text":"Please provide file containing aligned species order first target species alignment files followed first reference species alignment files – top file – last target species reference species alignment files – end file, following format, separated tabs. Note: order input species length file determines order species placed draw.linear() function; example first species length file (top file) first linear genome drawn thus bottom Y axis. case aligning two target species single reference species, suggested place reference middle length file - .e. target 1 (top file), reference (middle file), target 2 (bottom file). include header line Chromosome ID Chromosome length Species ID","code":""},{"path":"https://farre-lab.github.io/syntenyPlotteR/articles/syntenyPlotteR.html","id":"example-file-format-2","dir":"Articles","previous_headings":"Input files","what":"Example file format","title":"SyntenyPlotteR - a tool for genome synteny visualisation ","text":"Figure 4 - Example input file format length file showing first column containing chromosome name/number, second column containing chromosome length, third column containing species name.","code":""},{"path":"https://farre-lab.github.io/syntenyPlotteR/articles/syntenyPlotteR.html","id":"reformatting-alignment-data","dir":"Articles","previous_headings":"","what":"Reformatting alignment data","title":"SyntenyPlotteR - a tool for genome synteny visualisation ","text":"syntenyPlotteR package includes function reformat alignment synteny data DESCHRAMBLER inferCARs - curate files reformats function outputs text file containing reformatted alignment data. default function saves file temporary directory, can overridden using directory parameter .e. directory = \"path//directory\".","code":""},{"path":"https://farre-lab.github.io/syntenyPlotteR/articles/syntenyPlotteR.html","id":"usage","dir":"Articles","previous_headings":"Reformatting alignment data","what":"Usage","title":"SyntenyPlotteR - a tool for genome synteny visualisation ","text":"file_data - alignment output file DESCHRAMBLER/infeCARs output.filename - output file name reformatted data character string optional parameters customization function: reference.species - reference species ID character string final output table target.species - target species ID character string final output table directory - directory save text file .e. directory = \"path//directory\"","code":"library(syntenyPlotteR)  reformat.syntenyData(\"file_data\", \"output.filename\", reference.species = \"reference.sps\", target.species = \"target.sps\")"},{"path":"https://farre-lab.github.io/syntenyPlotteR/articles/syntenyPlotteR.html","id":"example-code-using-data-files-in-instextdata","dir":"Articles","previous_headings":"Reformatting alignment data","what":"Example code using data files in inst/extdata/","title":"SyntenyPlotteR - a tool for genome synteny visualisation ","text":"","code":"reformat.syntenyData(\"example_map_1.map\", \"reformatted.data\")"},{"path":"https://farre-lab.github.io/syntenyPlotteR/articles/syntenyPlotteR.html","id":"evolution-highway-style","dir":"Articles","previous_headings":"","what":"Evolution Highway style","title":"SyntenyPlotteR - a tool for genome synteny visualisation ","text":"function outputs image file containing evolution highway style alignment. default function saves file temporary directory, can overridden using directory parameter .e. directory = \"path//directory\".","code":""},{"path":"https://farre-lab.github.io/syntenyPlotteR/articles/syntenyPlotteR.html","id":"usage-1","dir":"Articles","previous_headings":"Evolution Highway style","what":"Usage","title":"SyntenyPlotteR - a tool for genome synteny visualisation ","text":"output - String assigned name output file name chrRange - range chromosomes reference species entered either single number .e. 1 range numbers .e. 1:22. Note: inputting sex chromosomes chromosomes characters name input concatenated string .e. c(1,2,3,“X”) data_file - File containing syntenic blocks alignments one target species aligned single reference optional parameters customization function: fileformat - format saving image .e. png pdf, parameter use: fileformat = \"pdf\" (default value “png”) colour - colour syntenic blocks (inverted blocks), parameter use: colour = \"red\" (default value “lightblue”, see Rcolour pallette colour options) inverted.colour - colour inverted syntenic blocks, parameter use: inverted.colour = \"blue\" (default value “lightpink”, see Rcolour pallette colour options) w - width image created can changed using: w = 5.5 (default) h - height image created can changed using: h = 10 (default) ps - point size image created can changed using: ps = 10 (default) directory - directory save image file .e. directory = \"path//directory\" (default save temporary directory)","code":"library(syntenyPlotteR)  draw.eh(\"output\", chrRange, \"data_file\", fileformat = \"png\", colour = \"lightblue\", inverted.colour = \"lightpink\", w = 5.5, h = 10, ps = 10)"},{"path":"https://farre-lab.github.io/syntenyPlotteR/articles/syntenyPlotteR.html","id":"example-code-using-data-files-in-instextdata-1","dir":"Articles","previous_headings":"Evolution Highway style","what":"Example code using data files in inst/extdata/","title":"SyntenyPlotteR - a tool for genome synteny visualisation ","text":"","code":"draw.eh(\"outputName\", c(17,\"X\"), \"example_eh_alignments_2.txt\", fileformat = \"pdf\")"},{"path":"https://farre-lab.github.io/syntenyPlotteR/articles/syntenyPlotteR.html","id":"example-output","dir":"Articles","previous_headings":"Evolution Highway style","what":"Example output:","title":"SyntenyPlotteR - a tool for genome synteny visualisation ","text":"Figure 5 - Example alignment Evolution Highway style. figure shows chromosome 17 single reference species aligned three target species - sps1, sps2, sps3. Sps1 sps2 chromosome 17 shows synteny reference chromosome 17 whereas sps3 chromosome 16 syntenic reference chromosome 17. plot represents co-linear synteny blue shading inverted synteny pink shading. White space represents alignment gaps.","code":""},{"path":"https://farre-lab.github.io/syntenyPlotteR/articles/syntenyPlotteR.html","id":"chromosome-painting-style","dir":"Articles","previous_headings":"","what":"Chromosome painting style","title":"SyntenyPlotteR - a tool for genome synteny visualisation ","text":"function outputs image file containing chromosome painting style alignment. default function saves file temporary directory, can overridden using directory parameter .e. directory = \"path//directory\".","code":""},{"path":"https://farre-lab.github.io/syntenyPlotteR/articles/syntenyPlotteR.html","id":"usage-2","dir":"Articles","previous_headings":"Chromosome painting style","what":"Usage","title":"SyntenyPlotteR - a tool for genome synteny visualisation ","text":"file_data - file containing syntenic blocks sizefile - tab separated file chromosome, scaffold, contig lengths species identifier, order first target species alignment files followed first reference species alignment files – top file – last target species reference species alignment files – end file. output - string assigned output file name optional parameters customization function: fileformat - format saving image .e. png pdf, parameter use: fileformat = \"pdf\" (default value “png”) colours - colours assign ideograms concatenated string chromosome IDs assigned colour values can found R colour Pallette, paramter use: colours = c(\"1\" = \"red\", \"2\" = \"blue\", \"3\" = \"green\",\"4\" = \"orange\", \"5\" = \"purple\",\"X\" = \"grey\") colours assigned default values used colours MUST assigned chromosomes w - width image created can changed using: w = 5.5 (default) h - height image created can changed using: h = 10 (default) ps - point size image created can changed using: ps = 10 (default) directory - directory save image file .e. directory = \"path//directory\" (default save temporary directory) Target species chromosomes painted. Reference used painting diagonals. Chromosomes order target sizes file. Note: alignments chromosomes defined length file function run.","code":"library(syntenyPlotteR)    draw.ideogram(\"file_data\", \"sizefile\", \"output\", fileformat = \"png\", colours = colours.default, w=8.5, h=10, ps=5)"},{"path":"https://farre-lab.github.io/syntenyPlotteR/articles/syntenyPlotteR.html","id":"example-code-using-data-files-in-instextdata-2","dir":"Articles","previous_headings":"Chromosome painting style","what":"Example code using data files in inst/extdata/","title":"SyntenyPlotteR - a tool for genome synteny visualisation ","text":"","code":"draw.ideogram(\"example_alignment_1.txt\", \"example_lengths.txt\", \"example.ideogram\")"},{"path":"https://farre-lab.github.io/syntenyPlotteR/articles/syntenyPlotteR.html","id":"example-output-1","dir":"Articles","previous_headings":"Chromosome painting style","what":"Example output:","title":"SyntenyPlotteR - a tool for genome synteny visualisation ","text":"Figure 6 - Example ideogram showing comparison sps1 sps2. figure sps1 target genome used draw chromosome ideograms, sps2 reference genome. shared synteny sps1 sps2 colours assigned sps2 chromosomes used colour syntenic regions .e. sps1 chromosome 1 drawn using black box green shading shows synteny sps2 chromosome 1. syntenic block traversed diagonal line, identification multiple syntenic blocks shown vertical line representing end one block start another, diagonal line syntenic block, whereas completely syntenic chromosomes depicted single line drawn bottom left top right chromosome 1. Inverted syntenic blocks represented diagonal drawn top left bottom right seen first syntenic block chromosome 19 - sps1 chromosome 19 ideogram drawn coloured showing synteny sps2 chromosome 18.","code":""},{"path":"https://farre-lab.github.io/syntenyPlotteR/articles/syntenyPlotteR.html","id":"linear-style","dir":"Articles","previous_headings":"","what":"Linear style","title":"SyntenyPlotteR - a tool for genome synteny visualisation ","text":"function outputs image file containing linear style alignment. default function saves file temporary directory, can overridden using directory parameter .e. directory = \"path//directory\".","code":""},{"path":"https://farre-lab.github.io/syntenyPlotteR/articles/syntenyPlotteR.html","id":"usage-3","dir":"Articles","previous_headings":"Linear style","what":"Usage","title":"SyntenyPlotteR - a tool for genome synteny visualisation ","text":"output - string assigned output file name sizefile - tab separated file chromosome, scaffold, contig lengths species identifier, order first target species alignment files followed first reference species alignment files – top file – last target species reference species alignment files – end file. … - files containing syntenic blocks (one file per alignment, order first target/reference (recent species pairwise alignment ancestral reconstruction data) alignment file last target/reference (ancestor pairwise alignment ancestral reconstruction data) alignment file) Please ensure species identifiers used length alignment files matching (identifiers letter case) optional parameters customization function: fileformat - format saving image .e. png pdf, parameter use: fileformat = \"pdf\" (default value “png”) colours - colours assign bands ideograms concatenated string chromosome IDs assigned colour values can found R colour Pallette, paramter use: colours = c(\"1\" = \"red\", \"2\" = \"blue\", \"3\" = \"green\",\"4\" = \"orange\", \"5\" = \"purple\",\"X\" = \"grey\") colours assigned default values used colours MUST assigned chromosomes w - width image created can changed using: w = 5.5 (default) h - height image created can changed using: h = 10 (default) opacity - opacity ribbons can changes using inputting: opacity = .5 (default) directory - directory save image file .e. directory = \"path//directory\" (default save temporary directory) Note: alignments chromosomes defined length file function run.","code":"library(syntenyPlotteR)  draw.linear(output, sizefile, ..., fileformat = \"png\", colours = colours.default, w=13, h=5, opacity = .5)"},{"path":"https://farre-lab.github.io/syntenyPlotteR/articles/syntenyPlotteR.html","id":"example-code-using-data-files-in-instextdata-3","dir":"Articles","previous_headings":"Linear style","what":"Example code using data files in inst/extdata/","title":"SyntenyPlotteR - a tool for genome synteny visualisation ","text":"","code":"draw.linear(\"example_linear\", \"example_lengths.txt\", \"example_alignment_1.txt\", \"example_alignment_2.txt\", \"example_alignment_3.txt\")"},{"path":"https://farre-lab.github.io/syntenyPlotteR/articles/syntenyPlotteR.html","id":"example-output-2","dir":"Articles","previous_headings":"Linear style","what":"Example output:","title":"SyntenyPlotteR - a tool for genome synteny visualisation ","text":"Figure 7 - Example linear alignment plot four species, sps4 sps1. grey boxes represent chromosomes species genome, chromosome number written box. coloured bands represent synteny genomes directly /one another. colours bands represent reference chromosome shares synteny target chromosome .e. chromosome 3 assigned colour pink thus synteny originating chromosome 3 either sps2, sps3, sps4 genome shown pink band.","code":""},{"path":"https://farre-lab.github.io/syntenyPlotteR/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Marta Farre. Author, maintainer, copyright holder. Sarah Quigley. Author. Joana Damas. Author. Denis Larkin. Author.","code":""},{"path":"https://farre-lab.github.io/syntenyPlotteR/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Quigley S, Damas J, Larkin DM, Farré M (2023). “syntenyPlotteR: user-friendly R package visualize genome synteny, ideal experienced novice bioinformaticians.” review, review(review), review.","code":"@Article{,   author = {Sarah Quigley and Joana Damas and Denis M. Larkin and Marta Farré},   title = {syntenyPlotteR: a user-friendly R package to visualize genome synteny, ideal for both experienced and novice bioinformaticians},   year = {2023},   journal = {under review},   volume = {under review},   number = {under review},   pages = {under review}, }"},{"path":"https://farre-lab.github.io/syntenyPlotteR/index.html","id":"syntenyplotter","dir":"","previous_headings":"","what":"Genome Synteny Visualization  ","title":"Genome Synteny Visualization  ","text":"R package draw synteny plots three different styles package developed Joana Damas (joanadamas@gmail.com), Sarah Quigley (slq4@kent.ac.uk), Denis Larkin (dlarkin@rvc.ac.uk) Marta Farré (m.farre-belmonte@kent.ac.uk) tested Windows 10 R v4.0.3, Windows 11 R v4.1.1 v4.2.2 MAC OS Ventura 13.1","code":""},{"path":[]},{"path":"https://farre-lab.github.io/syntenyPlotteR/index.html","id":"using-cran","dir":"","previous_headings":"To install:","what":"Using CRAN","title":"Genome Synteny Visualization  ","text":"","code":"install.packages(\"syntenyPlotteR\") library(syntenyPlotteR)"},{"path":"https://farre-lab.github.io/syntenyPlotteR/index.html","id":"using-github","dir":"","previous_headings":"To install:","what":"Using github","title":"Genome Synteny Visualization  ","text":"","code":"install.packages(\"devtools\") library(devtools) devtools::install_github(\"Farre-lab/syntenyPlotteR\") library(syntenyPlotteR)"},{"path":[]},{"path":"https://farre-lab.github.io/syntenyPlotteR/index.html","id":"input-alignment-file","dir":"","previous_headings":"Input files","what":"Input Alignment file","title":"Genome Synteny Visualization  ","text":"provide function modify output DESCHRAMBLER synteny tool creates type file: Alignment output file format reformat.syntenyData function  Otherwise, can provide input Alignment file separated tabs include header line Reference chromosome ID Reference start position Reference end position Target chromosome Target start position Target end position Orientation Reference species ID Target species ID Example input alignment file format three functions","code":""},{"path":"https://farre-lab.github.io/syntenyPlotteR/index.html","id":"chromosome-length-file-for-drawideogram-and-drawlinear-functions","dir":"","previous_headings":"Input files","what":"Chromosome Length file for draw.ideogram and draw.linear functions","title":"Genome Synteny Visualization  ","text":"Please provide file containing aligned species order newest species – top file – ancestor – end file, following format, separated tabs include header line Chromosome ID Chromosome length Species ID Example file format","code":""},{"path":[]},{"path":"https://farre-lab.github.io/syntenyPlotteR/index.html","id":"reformatting-alignment-data","dir":"","previous_headings":"","what":"Reformatting alignment data","title":"Genome Synteny Visualization  ","text":"syntenyPlotteR package includes function reformat alignment synteny data DESCHRAMBLER inferCARs - curate files reformats function outputs text file containing reformatted alignment data default function saves file temporary directory, can overridden using directory parameter .e. directory = \"path//directory\".","code":""},{"path":"https://farre-lab.github.io/syntenyPlotteR/index.html","id":"usage","dir":"","previous_headings":"Reformatting alignment data","what":"Usage","title":"Genome Synteny Visualization  ","text":"file_data - alignment output file DESCHRAMBLER/infeCARs output.filename - output file name reformatted data character string optional parameters customization function: reference.species - reference species ID character string final output table target.species - target species ID character string final output table directory - directory save text file .e. directory = \"path//directory\"","code":"library(syntenyPlotteR)  reformat.syntenyData(\"file_data\", \"output.filename\", reference.species = \"reference.sps\", target.species = \"target.sps\")"},{"path":"https://farre-lab.github.io/syntenyPlotteR/index.html","id":"example-code-using-data-files-in-instextdata","dir":"","previous_headings":"Reformatting alignment data","what":"Example code using data files in inst/extdata/","title":"Genome Synteny Visualization  ","text":"","code":"reformat.syntenyData(\"example_map_1.map\", \"reformatted.data\")"},{"path":[]},{"path":"https://farre-lab.github.io/syntenyPlotteR/index.html","id":"usage-1","dir":"","previous_headings":"Evolution Highway style","what":"Usage","title":"Genome Synteny Visualization  ","text":"output - String assigned name output file name chrRange - range chromosomes reference species entered either single number .e. 1 range numbers .e. 1:22. Note: inputting sex chromosomes chromosomes characters name input concatenated string .e. c(1,2,3,“X”) data_file - File containing syntenic blocks alignments one target species aligned single reference optional parameters customization function: fileformat - format saving image .e. png pdf, parameter use: fileformat = \"pdf\" (default value “png”) colour - colour syntenic blocks (inverted blocks), parameter use: colour = \"red\" (default value “lightblue”, see Rcolour pallette colour options) inverted.colour - colour inverted syntenic blocks, parameter use: inverted.colour = \"blue\" (default value “lightpink”, see Rcolour pallette colour options) w - width image created can changed using: w = 5.5 (default) h - height image created can changed using: h = 10 (default) ps - point size image created can changed using: ps = 10 (default) directory - directory save image file .e. directory = \"path//directory\" (default save temporary directory) Example code using data files inst/extdata/ Example output","code":"library(syntenyPlotteR)  draw.eh(\"output\", chrRange, \"data_file\", fileformat = \"png\", colour = \"lightblue\", inverted.colour = \"lightpink\", w = 5.5, h = 10, ps = 10) draw.eh(\"outputName\", c(17,\"X\"), \"example_eh_alignments_2.txt\", fileformat = \"pdf\")"},{"path":[]},{"path":[]},{"path":"https://farre-lab.github.io/syntenyPlotteR/index.html","id":"usage-2","dir":"","previous_headings":"Chromosome painting style","what":"Usage","title":"Genome Synteny Visualization  ","text":"file_data - file containing syntenic blocks sizefile - tab separated file chromosome, scaffold, contig lengths species identifier, order first target species alignment files followed first reference species alignment files – top file – last target species reference species alignment files – end file. output - string assigned output file name optional parameters customization function: fileformat - format saving image .e. png pdf, parameter use: fileformat = \"pdf\" (default value “png”) colours - colours assign ideograms concatenated string chromosome IDs assigned colour values can found R colour Pallette, paramter use: colours = c(\"1\" = \"red\", \"2\" = \"blue\", \"3\" = \"green\",\"4\" = \"orange\", \"5\" = \"purple\",\"X\" = \"grey\") colours assigned default values used colours MUST assigned chromosomes w - width image created can changed using: w = 5.5 (default) h - height image created can changed using: h = 10 (default) ps - point size image created can changed using: ps = 10 (default) directory - directory save image file .e. directory = \"path//directory\" (default save temporary directory) Target species chromosomes painted. Reference used painting diagonals. Chromosomes order target sizes file. Example code using data files inst/extdata/ Example output","code":"library(syntenyPlotteR)    draw.ideogram(\"file_data\", \"sizefile\", \"output\", fileformat = \"png\", colours = colours.default, w=8.5, h=10, ps=5) draw.ideogram(\"example_alignment_1.txt\", \"example_lengths.txt\", \"example.ideogram\")"},{"path":[]},{"path":"https://farre-lab.github.io/syntenyPlotteR/index.html","id":"usage-3","dir":"","previous_headings":"Linear style","what":"Usage","title":"Genome Synteny Visualization  ","text":"output - string assigned output file name sizefile - tab separated file chromosome, scaffold, contig lengths species identifier, order first target species alignment files followed first reference species alignment files – top file – last target species reference species alignment files – end file. … - files containing syntenic blocks (one file per alignment, order first target/reference (recent species pairwise alignment ancestral reconstruction data) alignment file last target/reference (ancestor pairwise alignment ancestral reconstruction data) alignment file) Please ensure species identifiers used length alignment files matching (identifiers letter case) optional parameters customization function: fileformat - format saving image .e. png pdf, parameter use: fileformat = \"pdf\" (default value “png”) colours - colours assign bands ideograms concatenated string chromosome IDs assigned colour values can found R colour Pallette, paramter use: colours = c(\"1\" = \"red\", \"2\" = \"blue\", \"3\" = \"green\",\"4\" = \"orange\", \"5\" = \"purple\",\"X\" = \"grey\") colours assigned default values used colours MUST assigned chromosomes w - width image created can changed using: w = 5.5 (default) h - height image created can changed using: h = 10 (default) opacity - opacity ribbons can changes using inputting: opacity = .5 (default) directory - directory save image file .e. directory = \"path//directory\" (default save temporary directory) Example code using data files inst/extdata/ Example output","code":"library(syntenyPlotteR)  draw.linear(output, sizefile, ..., fileformat = \"png\", colours = colours.default, w=13, h=5, opacity = .5) draw.linear(\"example_linear\", \"example_lengths.txt\", \"example_alignment_1.txt\", \"example_alignment_2.txt\", \"example_alignment_3.txt\")"},{"path":"https://farre-lab.github.io/syntenyPlotteR/index.html","id":"citation","dir":"","previous_headings":"Linear style","what":"Citation:","title":"Genome Synteny Visualization  ","text":"publication review, please cite: Farré M, Kim J, et al. Evolution gene regulation ruminants differs evolutionary breakpoint regions homologous synteny blocks. Genome Research 2019 Apr;29(4):576-589","code":""},{"path":"https://farre-lab.github.io/syntenyPlotteR/reference/draw.eh.html","id":null,"dir":"Reference","previous_headings":"","what":"Evolution Highway style plot — draw.eh","title":"Evolution Highway style plot — draw.eh","text":"Draw Evolution Highway Plots","code":""},{"path":"https://farre-lab.github.io/syntenyPlotteR/reference/draw.eh.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Evolution Highway style plot — draw.eh","text":"","code":"draw.eh(   output,   chrRange,   data_file,   directory = NULL,   fileformat = \"png\",   colour = \"lightblue\",   inverted.colour = \"lightpink\",   w = 5.5,   h = 10,   ps = 10 )"},{"path":"https://farre-lab.github.io/syntenyPlotteR/reference/draw.eh.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Evolution Highway style plot — draw.eh","text":"output output file name chrRange range chromosome numbers reference numbers .e. 1:29 data_file file containing syntentic blocks alignments directory string containing file path chosen directory save image file fileformat output file format desired using format fileformat = \"png\" (default \"png\") colour set colour non-inverted syntenic blocks using format colour = \"red\" (default \"lightblue\") inverted.colour set colour inverted syntenic blocks using format inverted.colour = \"blue\" (default \"lightpink\") w width output image using format w = 5.5 (default) h height output image using format h = 10 (default) ps point size output image using format ps = 10 (default)","code":""},{"path":"https://farre-lab.github.io/syntenyPlotteR/reference/draw.eh.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Evolution Highway style plot — draw.eh","text":"image file showing comparative drawings","code":""},{"path":"https://farre-lab.github.io/syntenyPlotteR/reference/draw.eh.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Evolution Highway style plot — draw.eh","text":"function draws Evolution Highway style plots. requires input: Desired output file name range chromosomes reference species entered either single number .e. 1 range numbers .e. 1:22. Note: inputting sex chromosomes chromosomes characters name input concatenated string .e. c(1,2,3,\"X\") File containing syntenic blocks alignments one target species aligned single reference; following format: reference chromosome, reference start position, reference end position, target chromosome, target start position, target end position, orient, reference species identifier, target species identifier optional parameters customization function: format saving image .e. png pdf can altered inputting: fileformat = \"pdf\" (default value \"png\") colour syntenic blocks (inverted blocks) can changed inputting: colour = \"red\" (default value \"lightblue\", see Rcolour pallette colour options) colour inverted syntenic blocks can changed inputting: inverted.colour = \"blue\" (default value \"lightpink\", see Rcolour pallette colour options) width image created can changed inputting: w = 5.5 height image created can changed inputting: h = 10 point size image created can changed inputting: ps = 10 directory image file saved, default image saved temporary directory, change inputting: directory = \"path//directory\" function works creating graph reference chromosome using start end positions create block reference target chromosome positions used colour region synteny identified Example: draw.eh(\"outputName\",c(17,\"X\"), \"example_eh_alignments_2.txt\", directory = \"path//directory\", fileformat = \"pdf\")","code":""},{"path":"https://farre-lab.github.io/syntenyPlotteR/reference/draw.eh.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Evolution Highway style plot — draw.eh","text":"","code":"# Create object containing file path to external dataset # (see vignette to follow examples with personal data)  file1 <- system.file(\"extdata\", \"example_eh_alignments_2.txt\", package = \"syntenyPlotteR\")  # -----------------------------------------------------------------------------------  # Run draw.eh function # To run example and save file to working directory # add directory parameter and set working directory # To run example with personal data see vignette  draw.eh(\"outputName\", c(17, \"X\"), file1, fileformat = \"pdf\") #> Saving eh image for chromosome 17 to /tmp/RtmpzmPwTb #> Saving eh image for chromosome X to /tmp/RtmpzmPwTb"},{"path":"https://farre-lab.github.io/syntenyPlotteR/reference/draw.ideogram.html","id":null,"dir":"Reference","previous_headings":"","what":"Draw ideograms in chromosome painting style — draw.ideogram","title":"Draw ideograms in chromosome painting style — draw.ideogram","text":"Draw synteny ideograms Chromosome painting style","code":""},{"path":"https://farre-lab.github.io/syntenyPlotteR/reference/draw.ideogram.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Draw ideograms in chromosome painting style — draw.ideogram","text":"","code":"draw.ideogram(   file_data,   sizefile,   output,   directory = NULL,   fileformat = \"png\",   colours = colours.default,   w = 8.5,   h = 10,   ps = 5 )"},{"path":"https://farre-lab.github.io/syntenyPlotteR/reference/draw.ideogram.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Draw ideograms in chromosome painting style — draw.ideogram","text":"file_data Path syntenic blocks file sizefile Chromosome size file output output file name directory string containing file path chosen directory save image file fileformat output file format specified using fileformat = \"pdf\" (default \"png\") colours concatenated string chromosome IDs assigned colours desired using format colours = c(\"1\" = \"red\", \"2\" = \"blue\", \"3\" = \"green\",\"X\" = \"grey\") colours assigned default values used w width output image using w = 8.5 (default) h height output image using h = 10 (default) ps point size output image using ps = 5 (default)","code":""},{"path":"https://farre-lab.github.io/syntenyPlotteR/reference/draw.ideogram.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Draw ideograms in chromosome painting style — draw.ideogram","text":"image file showing ideogram","code":""},{"path":"https://farre-lab.github.io/syntenyPlotteR/reference/draw.ideogram.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Draw ideograms in chromosome painting style — draw.ideogram","text":"function draws pairwise synteny plots chromosome painting style. Inputs tab separated files; requires input: File containing syntenic blocks following format: reference chromosome, reference start position, reference end position, target chromosome, target start position, target end position, orient, reference species identifier, target species identifier Tab separated file chromosome, scaffold, contig lengths species identifier, order first target species alignment files followed first reference species alignment files -- top file -- last target species reference species alignment files -- end file. format: chromosome ID, chromosome length, species identifier desired output file name Please separate files tab ensure species identifiers used length alignment files matching (identifiers caseing) optional parameters customization function: format saving image .e. png pdf can altered inputting: fileformat = \"pdf\" (default value \"png\") colour ideograms can altered inputting concatenated string chromosome IDs assigned colour values can found R colour Pallette e.g. colours = c(\"1\" = \"red\", \"2\" = \"blue\", \"3\" = \"green\",\"4\" = \"orange\", \"5\" = \"purple\",\"X\" = \"grey\") colours assigned default values used colours MUST assigned chromosomes width image created can changed inputting: w = 8.5 (default) height image created can changed inputting: h = 10 (default) point size image created can changed inputting: ps = 5 (default) directory image file saved, default image saved temporary directory, change inputting: directory = \"path//directory\" Target species chromosomes painted. Reference used painting diagonals. Chromosomes order target chromosomes chromosome length file Example: draw.ideogram(\"example_alignment_1.txt\", \"example_lengths.txt\", \"outputname\", directory = \"path//directory\", fileformat = \"pdf\")","code":""},{"path":"https://farre-lab.github.io/syntenyPlotteR/reference/draw.ideogram.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Draw ideograms in chromosome painting style — draw.ideogram","text":"","code":"# Create objects containing file paths to external dataset # (see vignette to follow examples with personal data)  length.file <- system.file(\"extdata\", \"example_lengths.txt\", package = \"syntenyPlotteR\") file1 <- system.file(\"extdata\", \"example_alignment_1.txt\", package = \"syntenyPlotteR\")  # -----------------------------------------------------------------------------------  # Run draw.ideogram function # To run example and save file to working directory # add directory parameter and set working directory # To run example with personal data see vignette  draw.ideogram(file1, length.file, \"outputName\", fileformat = \"pdf\") #> Saving ideogram image to /tmp/RtmpzmPwTb"},{"path":"https://farre-lab.github.io/syntenyPlotteR/reference/draw.linear.html","id":null,"dir":"Reference","previous_headings":"","what":"Linear synteny plot — draw.linear","title":"Linear synteny plot — draw.linear","text":"Draw Linear Synteny Plots","code":""},{"path":"https://farre-lab.github.io/syntenyPlotteR/reference/draw.linear.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Linear synteny plot — draw.linear","text":"","code":"draw.linear(   output,   sizefile,   ...,   directory = NULL,   fileformat = \"png\",   colours = colours.default,   w = 13,   h = 5,   opacity = 0.5 )"},{"path":"https://farre-lab.github.io/syntenyPlotteR/reference/draw.linear.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Linear synteny plot — draw.linear","text":"output output file name sizefile Chromosome Size file ... synteny files (number alignment files can entered) directory string containing file path chosen directory save image file fileformat output file format specified using format fileformat = \"pdf\" (default \"png\") colours concatenated string chromosome IDs assigned colours desired using format colours = c(\"1\" = \"red\", \"2\" = \"blue\", \"3\" = \"green\", \"X\" = \"grey\") colours assigned default values used w width output image using format w = 13 (default) h height output image using format h = 5 (default) opacity opacity syntenic bands using format opacity = .5 (default)","code":""},{"path":"https://farre-lab.github.io/syntenyPlotteR/reference/draw.linear.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Linear synteny plot — draw.linear","text":"image file showing linear comparison drawings","code":""},{"path":"https://farre-lab.github.io/syntenyPlotteR/reference/draw.linear.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Linear synteny plot — draw.linear","text":"function draws linear synteny plots. requires: desired output file name; Tab separated file chromosome, scaffold, contig lengths species identifier, order first target species alignment files followed first reference species alignment files -- top file -- last target species reference species alignment files -- end file. format: chromosome ID, chromosome length, species identifier files containing syntenic blocks - one file per alignment, order first target/reference (recent species pairwise alignment ancestral reconstruction data) alignment file last target/reference (ancestor pairwise alignment ancestral reconstruction data) alignment file following format: reference chromosome, reference start position, reference end position, target chromosome, target start position, target end position, orient, reference species identifier, target species identifier Please separate files tab ensure species identifiers used length alignment files matching (identifiers caseing) optional parameters customization function: format saving image .e. png pdf can altered inputting: fileformat = \"pdf\" (default value \"png\") colour synteny bands can altered inputting concatenated string chromosome IDs assigned colour values can found R colour Pallette e.g. colours = c(\"1\" = \"red\", \"2\" = \"blue\", \"3\" = \"green\",\"4\" = \"orange\", \"5\" = \"purple\",\"X\" = \"grey\") colours assigned default values used colours MUST assigned chromosomes width image created can changed inputting: w = 13 (default) height image created can changed inputting: h = 5 (default) opacity ribbons can changed inputting: opacity = .5 (default) directory image file saved, default image saved temporary directory, change inputting: directory = \"path//directory\" function works using chromosome length file order Y axis provide chromosome lengths draw chromosome ideograms alignment files provides coordinates draw alignment bands ideograms Example: draw.linear(\"outputname\", \"example_lengths.txt\", \"example_alignment_1.txt\", \"example_alignment_2.txt\", \"example_alignment_3.txt\", directory = \"path//directory\", fileformat = \"pdf\")","code":""},{"path":"https://farre-lab.github.io/syntenyPlotteR/reference/draw.linear.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Linear synteny plot — draw.linear","text":"","code":"# Create objects containing file paths to external dataset # (see vignette to follow examples with personal data)  length.file <- system.file(\"extdata\", \"example_lengths.txt\", package = \"syntenyPlotteR\") file1 <- system.file(\"extdata\", \"example_alignment_1.txt\", package = \"syntenyPlotteR\") file2 <- system.file(\"extdata\", \"example_alignment_2.txt\", package = \"syntenyPlotteR\") file3 <- system.file(\"extdata\", \"example_alignment_3.txt\", package = \"syntenyPlotteR\")  # -----------------------------------------------------------------------------------  # Run draw.linear function # To run example and save file to working directory # add directory parameter and set working directory # To run example with personal data see vignette  draw.linear(\"outputName\", length.file, file1, file2, file3, fileformat = \"pdf\") #> Saving linear image to /tmp/RtmpzmPwTb"},{"path":"https://farre-lab.github.io/syntenyPlotteR/reference/reformat.syntenyData.html","id":null,"dir":"Reference","previous_headings":"","what":"Reformat synteny data — reformat.syntenyData","title":"Reformat synteny data — reformat.syntenyData","text":"Reformat synteny data","code":""},{"path":"https://farre-lab.github.io/syntenyPlotteR/reference/reformat.syntenyData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reformat synteny data — reformat.syntenyData","text":"","code":"reformat.syntenyData(   file_data,   filename,   directory = NULL,   reference.species = reference.sps,   target.species = target.sps )"},{"path":"https://farre-lab.github.io/syntenyPlotteR/reference/reformat.syntenyData.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reformat synteny data — reformat.syntenyData","text":"file_data input file name descrambler .map data filename output file name reformatted data directory string containing file path chosen directory save text file reference.species reference species identifier character string target.species target species identifier character string","code":""},{"path":"https://farre-lab.github.io/syntenyPlotteR/reference/reformat.syntenyData.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reformat synteny data — reformat.syntenyData","text":"text file reformatted data","code":""},{"path":"https://farre-lab.github.io/syntenyPlotteR/reference/reformat.syntenyData.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Reformat synteny data — reformat.syntenyData","text":"function takes output alignment softwares deschrambler inferCARs re-formats syntenyPlotteR - curate files re-formats requires input: data output deschrambler inferCARs desired output file name optional parameters customization function: reference.species allows set reference species identifier set final output table .e. reference.species = \"ref\" target.species allows set target species identifier set final output table .e. target.species = \"tar\" directory text file saved, default file saved temporary directory, change inputting: directory = \"path//directory\" Example: reformat.syntenyData(\"deschrambler.output\", \"reformatted.data\", directory = \"path//directory\", reference.species = \"ref\", target.species = \"tar\" )","code":""},{"path":"https://farre-lab.github.io/syntenyPlotteR/reference/reformat.syntenyData.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reformat synteny data — reformat.syntenyData","text":"","code":"# Create object containing file path to external dataset # (see vignette to follow examples with personal data)  file <- system.file(\"extdata\", \"example_map_1.map\", package = \"syntenyPlotteR\")  # -----------------------------------------------------------------------------------  # Run reformat.syntenyData function # To run example and save file to working directory # add directory parameter and set working directory # To run example with personal data see vignette  reformat.syntenyData(file, \"outputName\") #> Writing reformatted text file to /tmp/RtmpzmPwTb"},{"path":"https://farre-lab.github.io/syntenyPlotteR/reference/syntenyPlotteR-package.html","id":null,"dir":"Reference","previous_headings":"","what":"syntenyPlotteR: Genome Synteny Visualization — syntenyPlotteR-package","title":"syntenyPlotteR: Genome Synteny Visualization — syntenyPlotteR-package","text":"Draw syntenic relationships genome assemblies. 3 functions take tab delimited file containing alignment data syntenic blocks genomes produce either linear alignment plot, evolution highway style plot, painted ideogram representing syntenic relationships. also function convert alignment data DESCHRAMBLER/inferCAR format required data structure.","code":""},{"path":[]},{"path":"https://farre-lab.github.io/syntenyPlotteR/reference/syntenyPlotteR-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"syntenyPlotteR: Genome Synteny Visualization — syntenyPlotteR-package","text":"Maintainer: Marta Farre m.farre-belmonte@kent.ac.uk [copyright holder] Authors: Sarah Quigley slq4@kent.ac.uk Joana Damas joanadamas@gmail.com Denis Larkin dlarkin@rvc.ac.uk","code":""},{"path":"https://farre-lab.github.io/syntenyPlotteR/news/index.html","id":"syntenyplotter-100","dir":"Changelog","previous_headings":"","what":"syntenyPlotteR 1.0.0","title":"syntenyPlotteR 1.0.0","text":"CRAN release: 2023-10-03","code":""},{"path":"https://farre-lab.github.io/syntenyPlotteR/news/index.html","id":"syntenyplotter-0009000","dir":"Changelog","previous_headings":"","what":"SyntenyPlotteR 0.0.0.9000","title":"SyntenyPlotteR 0.0.0.9000","text":"Added NEWS.md file track changes package.","code":""}]
